<project name="hft-sim" default="build-jar" basedir=".">
  <description>
    hft build file
  </description>
  
  <!-- set global properties for this build -->
  <property name="src"   location="src"/>
  <property name="test"  location="test"/>
  <property name="build" location="build_ant"/>
  <property name="build-test" location="build_test"/>
  <property name="dist"  location="dist"/>
  <property name="lib"	 location="lib"/>
  <property name="name"  value="HFT Simulation System"/>
  <property name="main-class" value="systemmanager/SystemManager"/>
  
  <target name="compile-src" description="compile the source" >
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create build directory if it doesn't exist -->
    <mkdir dir="${build}"/>
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"
	   debug="on" deprecation="on" optimize="on" includeantruntime="false"
	   source="1.6" target="1.6">
      <classpath>
	<fileset dir="${lib}">
	  <include name="*.jar"/>
	</fileset>
      </classpath>
    </javac>
  </target>

  <target name="compile-test" depends="compile-src"
	  description="compile test code" >
    <!-- Make build_test directory -->
    <mkdir dir="${build-test}"/>
    <!-- Compile the java code from ${test} into ${build-test} -->
    <javac srcdir="${test}" destdir="${build-test}"
	   debug="on" deprecation="on" optimize="on" includeantruntime="false"
	   source="1.6" target="1.6">
      <classpath>
	<pathelement path="${build}"/>
	<fileset dir="${lib}">
	  <include name="*.jar"/>
	</fileset>
      </classpath>
    </javac>
  </target>
  
  <target name="build-jar" depends="compile-src" unless="no-changes"
	  description="generate the distribution" >
    <!-- Make distribution directory -->
    <mkdir dir="${dist}"/>
    <!-- Put everything in ${build} into the jar file -->
    <jar jarfile="${dist}/hft.jar" basedir="${build}">
      <manifest>
	<attribute name="Built-By" value="${user.name}"/>
	<attribute name="Sealed" value="true"/>
	<attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>

  <target name="test" depends="compile-test"
	  description="runs junit tests">
    <junit haltonerror="false" haltonfailure="false" fork="true">
      <!-- Add compiled test, source files, and libs to classpath -->
      <classpath>
	<pathelement path="${build}"/>
	<pathelement path="${build-test}"/>
	<fileset dir="${lib}">
	  <include name="*.jar"/>
	</fileset>
      </classpath>
      <!-- Run every test in ${test} -->
      <batchtest>
	<fileset dir="${test}" includes="**/*Test*.java"/>
	<formatter type="brief" usefile="false"/>
      </batchtest>
    </junit>
  </target>

  <target name="clean"
	  description="clean up build and distribution files" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${build-test}"/>
    <delete dir="${dist}"/>
  </target>
  
  <target name="run" depends="build-jar"
	  description="runs hft with command line arguments to run use 'ant run -Dpath=[sim path] -Dobs=[obs num]">
    <java classname="${main-class}" fork="true">
      <classpath>
	<pathelement location="${dist}/hft.jar"/>
	<fileset dir="${lib}">
	  <include name="*.jar"/>
	</fileset>
      </classpath>
      <arg value="${path}"/>
      <arg value="${obs}"/>
    </java>
  </target>
  
</project>
