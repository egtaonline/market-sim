<project name="cv" default="build-jar" basedir=".">
  <description>
    hft build file
  </description>
  
  <!-- set global properties for this build -->
  <property name="src"   location="src"/>
  <property name="build" location="bin"/>
  <property name="dist"  location="dist"/>
  <property name="lib"	 location="lib"/>
  <property name="name"  value="CV"/>
  <property name="cv-main" value="controlvariates/VarianceReduction"/>
  <property name="ft-main" value="parser/FeatureParser"/>
  
  <target name="check-for-changes" unless="force"
	  description="checks compiled jar for changes with source file">
    <uptodate property="no-changes" targetfile="${dist}/cv.jar">
      <srcfiles dir="${src}"  includes="**/*.java"/> 
    </uptodate>
  </target>

  <target name="compile-src" depends="check-for-changes" unless="no-changes"
	  description="compile the source" >
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Clean build directory -->
    <delete dir="${build}"/>
    <mkdir dir="${build}"/>
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"
	   debug="on" deprecation="on" optimize="on" includeantruntime="false"
	   source="1.6" target="1.6">
      <classpath>
	<fileset dir="${lib}">
	  <include name="*.jar"/>
	</fileset>
      </classpath>
    </javac>
  </target>
	
  <target name="build-jar" depends="compile-src" unless="no-changes"
	  description="generate the distribution" >
    <!-- Clean distribution directory -->
    <delete dir="${dist}"/>
    <mkdir dir="${dist}"/>
    <!-- Put everything in ${build} into the jar file -->
    <jar jarfile="${dist}/cv.jar" basedir="${build}">
      <manifest>
	<attribute name="Built-By" value="${user.name}"/>
	<attribute name="Sealed" value="true"/>
	<!--<attribute name="Main-Class" value="${cv-main}"/>--> 
      </manifest>
    </jar>
  </target>
	
	  

  <target name="force"
	  description="flags build so everything is forced to recompile">
    <property name="force" value="true"/>
  </target>
  
</project>
